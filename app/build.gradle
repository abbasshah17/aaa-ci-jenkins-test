apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version

    defaultConfig {
        applicationId "com.example.jenkins_ci_test"

        minSdkVersion rootProject.ext.minimum_sdk
        targetSdkVersion rootProject.ext.target_sdk

        versionCode 100000
        versionName "1.0.0.0.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:${rootProject.ext.app_compat}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraint_layout}"

    implementation "com.google.android.material:material:${rootProject.ext.material}"

    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.life_cycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel:${rootProject.ext.life_cycle}"

    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttpVersion}"

    // Dagger Dependency Injection
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.dagger}"

    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"

    testImplementation "junit:junit:${rootProject.ext.junit}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.androidx_runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.androidx_espresso}"
}
